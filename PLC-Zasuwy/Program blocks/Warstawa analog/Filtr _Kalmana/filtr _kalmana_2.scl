FUNCTION_BLOCK "filtr _kalmana_2"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1

BEGIN
	IF "FirstScan" THEN //w pierwszym cyklu sterownika
	  FOR "I":= 0 TO 4 DO
	    "KALMAN_DB".kalman_K["I"] := 0.0;
	    "KALMAN_DB".kalman_R["I"] := 0.001;  //niepewność pomiaru
	    "KALMAN_DB".kalman_Q["I"] := 0.00001;  //niepewność procesu
	    "KALMAN_DB".kalman_P["I"] := 1.0;
	  END_FOR;        //parametry R i Q można dobrać osobno dla każdego kanału
	END_IF;           //zostaje wykonana inicjalizacja wszystkich 5 torów analogowych
	
	"R_TRIG_DB"(CLK:="Clock_10Hz",
	            Q=>"zbocze_dod_zegar"); //oczekiwanie na zbocze narastające
	
	IF "zbocze_dod_zegar" THEN  //ten fragment będzie wykonywany regularnie co 0.1s
	  
	  FOR "I":= 0 TO 4 DO
	  
	    "KALMAN_DB".wejscie_anal["I"] := PEEK_WORD(area:= 16#81, dbNumber:= 0, byteOffset:= (68 + (2 * "I")));
	    //sterownik odczytuje kolejno pięć wejść analogowych,
	    //kazde z nich zajmuje w pamięci jedno słowo począwszy od adresu %IW64
	    
	    //"KALMAN_DB".wejscie_anal["I"] := "KALMAN_DB".wejscie_anal["I"] AND 16#03FF;
	    //maskowanie wejść
	  
	    "KALMAN_DB".pomiar_napiecie["I"] := NORM_X(MIN:= 0, VALUE:= "KALMAN_DB".wejscie_anal["I"], MAX:= 27648);
	    //wartość zwracana przez n-bitowy przetwornik A\C zawiera się w przedziale od 0 do (2^n)-1
	  
	    "KALMAN_DB".pomiar_napiecie["I"] := "KALMAN_DB".pomiar_napiecie["I"] * 10.0;
	    //znormalizowana wartość zostaje pomnożona przez 10.0, aby tagi w tablicy "pomiar_napiecie"
	    //reprezentowały faktyczne napięcie na wejściu analogowym
	    //w przypadku zakresów wejściowych różnych od standardu można
	    //skorzystać z intruksji CASE i mnożyć wyjście przez różne skalary
	  
	    //FILTR KALMANA
	    "KALMAN_DB".kalman_P["I"] := "KALMAN_DB".kalman_P["I"] + "KALMAN_DB".kalman_Q["I"]; //predykcja
	  
	    "KALMAN_DB".kalman_K["I"] := "KALMAN_DB".kalman_P["I"] / ("KALMAN_DB".kalman_P["I"] + "KALMAN_DB".kalman_R["I"]); //korekcja
	    
	    "KALMAN_DB".kalman_napiecie["I"] := "KALMAN_DB".kalman_napiecie["I"] +
	                "KALMAN_DB".kalman_K["I"] * ("KALMAN_DB".pomiar_napiecie["I"] - "KALMAN_DB".kalman_napiecie["I"]);
	    
	    "KALMAN_DB".kalman_P["I"] := (1.0 - "KALMAN_DB".kalman_K["I"]) * "KALMAN_DB".kalman_P["I"];
	  
	    //wynik filtracji gotowy do użycia znajduje się w tablicy "KALMAN_DB".kalman_napiecie
	  
	  END_FOR;
	
	END_IF;
	
END_FUNCTION_BLOCK

