FUNCTION_BLOCK "FB220_TimeSyn_PLC_To_HMI"
{ S7_Optimized_Access := 'FALSE' }
VERSION : 0.1
   VAR_OUTPUT 
      PLC_RD_LOC_T {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
      PLC_RD_SYS_T {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
   END_VAR

   VAR_IN_OUT 
      AreaPointer_JobMailbox : Array[0..3] of Word;
      SetTime : Bool;
      SetDate : Bool;
   END_VAR

   VAR 
      Func_RD_LOC_T {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
      Ret_Val_RD_LOC_T : Int;
      BCD_Hour : Word;
      BCD_Minute : Word;
      BCD_Second : Word;
      BCD_Weekdday : Word;
      BCD_Day : Word;
      BCD_Month : Word;
      BCD32_Year : DWord;
      BCD16_Year : Word;
      STEP1 : Bool;
      STEP2 : Bool;
      STEP3 : Bool;
      STEP10 : Bool;
      STEP11 : Bool;
      STEP12 : Bool;
      Func_RD_SYS_T {InstructionName := 'DTL'; LibVersion := '1.0'} : DTL;
      Ret_Val_RD_SYS_T : Int;
   END_VAR


BEGIN
	//SIMATIC S7-1200 / 1500
	//
	
	//Odczyt aktualnego czasu PLC // Odczyt aktualnego czasu PLC
	#Ret_Val_RD_LOC_T := RD_LOC_T(#Func_RD_LOC_T);
	#PLC_RD_LOC_T := (#Func_RD_LOC_T);
	#Ret_Val_RD_SYS_T := RD_SYS_T(#Func_RD_SYS_T);
	#PLC_RD_SYS_T := (#Func_RD_SYS_T);
	
	
	//***Czas transmisja
	//Step 1
	//Zacznij, jeśli job mailmox  ma wartość zero.    
	IF #SetTime AND (#AreaPointer_JobMailbox[0] = 0) THEN
	    
	    //Parameter 1-3: Mit Null "0" vorbelegen //Parameters 1-3: Preassign with zero "0"
	    #AreaPointer_JobMailbox[1] := 0;
	    #AreaPointer_JobMailbox[2] := 0;
	    #AreaPointer_JobMailbox[3] := 0;
	    
	    #SetTime := false;
	    #STEP2 := true;
	    
	END_IF;
	
	//Step 2
	//plc job 14 - assign parameter
	IF #STEP2 THEN
	    
	    //Convert USInt to BCD format (plc job 14 need bcd format)
	    #BCD_Hour := INT_TO_BCD16(#Func_RD_LOC_T.HOUR);
	    #BCD_Minute := INT_TO_BCD16(#Func_RD_LOC_T.MINUTE);
	    #BCD_Second := INT_TO_BCD16(#Func_RD_LOC_T.SECOND);
	    
	    //Parameter
	    #AreaPointer_JobMailbox[1].%B0 := #BCD_Hour.%B0;
	    #AreaPointer_JobMailbox[2].%B1 := #BCD_Minute.%B0;
	    #AreaPointer_JobMailbox[2].%B0 := #BCD_Second.%B0;
	    
	    //plc job 14
	    #AreaPointer_JobMailbox[0] := 14;
	    
	    #STEP2 := FALSE;
	    
	END_IF;
	
	
	//****Data przesłania
	//Step 10
	//Start, if job mailbox are zero.    
	IF #SetDate AND (#AreaPointer_JobMailbox[0] = 0) THEN
	    
	    //Parameters 1-3: Preassign with zero "0"
	    #AreaPointer_JobMailbox[1] := 0;
	    #AreaPointer_JobMailbox[2] := 0;
	    #AreaPointer_JobMailbox[3] := 0;
	    
	    #SetDate := false;
	    #STEP11 := true;
	    
	END_IF;
	
	//Step 11
	//plc job 15 - assign parameter
	IF #STEP11 THEN
	    
	    //Convert USInt to BCD  (plc job 15 need bcd format)
	    #BCD_Weekdday := INT_TO_BCD16(#Func_RD_LOC_T.WEEKDAY);
	    #BCD_Day := INT_TO_BCD16(#Func_RD_LOC_T.DAY);
	    #BCD_Month := INT_TO_BCD16(#Func_RD_LOC_T.MONTH);
	    #BCD32_Year := DINT_TO_BCD32(#Func_RD_LOC_T.YEAR);
	    // convert BCD32 to BCD16
	    #BCD16_Year := DWORD_TO_WORD(#BCD32_Year);
	    
	    //Parameter
	    #AreaPointer_JobMailbox[1].%B0 := #BCD_Weekdday.%B0;
	    #AreaPointer_JobMailbox[2].%B1 := #BCD_Day.%B0;
	    #AreaPointer_JobMailbox[2].%B0 := #BCD_Month.%B0;
	    #AreaPointer_JobMailbox[3].%B1 := #BCD16_Year.%B0;
	    
	    //plc job 15
	    #AreaPointer_JobMailbox[0] := 15;
	    
	    #STEP11 := FALSE;
	    
	END_IF;
	
	
END_FUNCTION_BLOCK

